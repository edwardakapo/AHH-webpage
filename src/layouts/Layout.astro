---
import GoogleAnalytics from '@/components/GoogleAnalytics.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Anorak Postnatal Care provides comprehensive support for new mothers and their babies, offering personalized care, mental health support, nutrition plans, and home services to ensure a smooth postpartum journey. Serving Guelph and surrounding areas with both in-home visits and homestay options." />
		<meta name="keywords" content="Anorak Postnatal Care, postnatal care, postpartum support, mother and baby care, mental health support, nutrition plans, home support services, postnatal home visits, homestay for new mothers, Guelph postnatal care, postpartum recovery, maternal health, newborn care, fourth trimester support, postpartum services, Toronto postnatal care, Mississauga postnatal care, Scarborough postnatal care, Kitchener postnatal care, Waterloo postnatal care, Hamilton postnatal care, Cambridge postnatal care, London ON postnatal care" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<meta name="google-site-verification" content="eSv6jDh5Yq4g4wQYVdMdwVXFrMms-id8zfTrIq0vTEg" />
		<link href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Noticia+Text:ital,wght@0,400;0,700;1,400;1,700&family=Noto+Sans:ital,wdth,wght@0,62.5..100,100..900;1,62.5..100,100..900&display=swap" rel="stylesheet">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<GoogleAnalytics />
		<!-- favicon links -->
		<link rel="icon" type="image/png" sizes="32x32" href="icons/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="icons/favicon-16x16.png" />
		<link rel="apple-touch-icon" sizes="180x180" href="icons/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="192x192" href="icons/android-chrome-192x192.png" />
		<link rel="icon" type="image/png" sizes="512x512" href="icons/android-chrome-512x512.png" />
		<link rel="manifest" href="icons/site.webmanifest" />
	</head>
	<body class="bg-white dark:bg-black">
		<slot />
	</body>
</html>
<style is:global>
    :root {
        /* Default text color */
        --text-color: #333;

		/* Embla CSS */
		--text-body: rgb(54, 49, 61);
		--text-high-contrast: rgb(49, 49, 49);
		--text-medium-contrast: rgb(99, 94, 105);
		--detail-high-contrast: rgb(192, 192, 192);
		--detail-medium-contrast: rgb(234, 234, 234);
		--detail-low-contrast: rgb(240, 240, 242);
		--text-high-contrast-rgb-value: 49, 49, 49;
    }

    :root.dark {
        /* Dark mode text color */
        --text-color: #fff;
    }

	section {
    opacity: 0; /* Start hidden */
    transition: opacity 0.5s ease-in; /* Transition effect */
	}

	section.visible {
		opacity: 1; /* Fully visible */
	}

    body {
        color: var(--text-color);
		transition: color 0.3s ease; /* Smooth transition for text color */
        background-color: var(--bg-color);
        transition: background-color 0.3s ease; /* Smooth transition for background color */
    }
	html {
		scroll-behavior: smooth;
		box-sizing: border-box;
		scroll-padding-top: 80px; 

	}

	/* Reset default styling for date input */
input[type="date"] {
    background: none; /* Remove background */
	padding: 8px;
	/* margin: 2px; */
	width: 100%;
	height: 100%;
    font: inherit; /* Inherit font styles */
}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll('section');

    const options = {
        root: null, // Use the viewport as the root
        rootMargin: '0px',
        threshold: 0.1 // Trigger when 10% of the section is visible
    };

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible'); // Add visible class
                observer.unobserve(entry.target); // Stop observing once visible
            }
        });
    }, options);

    sections.forEach(section => {
        observer.observe(section); // Observe each section
    });
});
</script>